/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Monitoring, MonitoringInterface } from "../Monitoring";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "companyId",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "capAmount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "reportingYear",
        type: "uint256",
      },
    ],
    name: "DataInserted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_companyId",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_year",
        type: "uint256",
      },
    ],
    name: "getTotalCapByYear",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_companyId",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_capAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reportingYear",
        type: "uint256",
      },
    ],
    name: "insertData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061072e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063205ed53e1461003b578063639e819f1461006b575b600080fd5b6100556004803603810190610050919061040f565b610087565b604051610062919061045e565b60405180910390f35b61008560048036038101906100809190610479565b61017b565b005b6000806000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002090506000805b8280549050811015610130578281815481106100fe576100fd6104cc565b5b9060005260206000209060020201600001548261011b919061052a565b915080806101289061055e565b9150506100df565b506101706040518060400160405280600d81526020017f746f74616c436170202d2d3e2000000000000000000000000000000000000000815250826102b1565b809250505092915050565b600082116101be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b590610629565b60405180910390fd5b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002090508060405180604001604052808581526020018481525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010155505081838573ffffffffffffffffffffffffffffffffffffffff167f77878ec0331051081e8d9c4ee250e344fe5fa4b8fd5a618408c071919c48e50b60405160405180910390a450505050565b61034982826040516024016102c79291906106c8565b6040516020818303038152906040527fb60e72cc000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061034d565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103a68261037b565b9050919050565b6103b68161039b565b81146103c157600080fd5b50565b6000813590506103d3816103ad565b92915050565b6000819050919050565b6103ec816103d9565b81146103f757600080fd5b50565b600081359050610409816103e3565b92915050565b6000806040838503121561042657610425610376565b5b6000610434858286016103c4565b9250506020610445858286016103fa565b9150509250929050565b610458816103d9565b82525050565b6000602082019050610473600083018461044f565b92915050565b60008060006060848603121561049257610491610376565b5b60006104a0868287016103c4565b93505060206104b1868287016103fa565b92505060406104c2868287016103fa565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610535826103d9565b9150610540836103d9565b9250828201905080821115610558576105576104fb565b5b92915050565b6000610569826103d9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361059b5761059a6104fb565b5b600182019050919050565b600082825260208201905092915050565b7f43617020616d6f756e74206d7573742062652067726561746572207468616e2060008201527f7a65726f00000000000000000000000000000000000000000000000000000000602082015250565b60006106136024836105a6565b915061061e826105b7565b604082019050919050565b6000602082019050818103600083015261064281610606565b9050919050565b600081519050919050565b60005b83811015610672578082015181840152602081019050610657565b60008484015250505050565b6000601f19601f8301169050919050565b600061069a82610649565b6106a481856105a6565b93506106b4818560208601610654565b6106bd8161067e565b840191505092915050565b600060408201905081810360008301526106e2818561068f565b90506106f1602083018461044f565b939250505056fea264697066735822122017617e401c35a45c155899911331b5bdfaf79562eaa3cf70641c24c062b1c39b64736f6c63430008120033";

type MonitoringConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MonitoringConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Monitoring__factory extends ContractFactory {
  constructor(...args: MonitoringConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Monitoring> {
    return super.deploy(overrides || {}) as Promise<Monitoring>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Monitoring {
    return super.attach(address) as Monitoring;
  }
  override connect(signer: Signer): Monitoring__factory {
    return super.connect(signer) as Monitoring__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MonitoringInterface {
    return new utils.Interface(_abi) as MonitoringInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Monitoring {
    return new Contract(address, _abi, signerOrProvider) as Monitoring;
  }
}
